[{"D:\\Workflow\\code\\proj\\#\\portfolio projects\\movie lib\\_final-ver\\movie_library\\src\\index.js":"1","D:\\Workflow\\code\\proj\\#\\portfolio projects\\movie lib\\_final-ver\\movie_library\\src\\App.js":"2","D:\\Workflow\\code\\proj\\#\\portfolio projects\\movie lib\\_final-ver\\movie_library\\src\\components\\DarkMode\\DarkModeToogle\\darkModeToogle.js":"3","D:\\Workflow\\code\\proj\\#\\portfolio projects\\movie lib\\_final-ver\\movie_library\\src\\components\\DarkMode\\useMedia.js":"4","D:\\Workflow\\code\\proj\\#\\portfolio projects\\movie lib\\_final-ver\\movie_library\\src\\components\\DarkMode\\useLocalStorage.js":"5","D:\\Workflow\\code\\proj\\#\\portfolio projects\\movie lib\\_final-ver\\movie_library\\src\\components\\DarkMode\\useDarkMode.js":"6","D:\\Workflow\\code\\proj\\#\\portfolio projects\\movie lib\\_final-ver\\movie_library\\src\\components\\SearchBar\\serachBar.js":"7","D:\\Workflow\\code\\proj\\#\\portfolio projects\\movie lib\\_final-ver\\movie_library\\src\\components\\MovieCard\\movieCard.js":"8"},{"size":226,"mtime":1608452650353,"results":"9","hashOfConfig":"10"},{"size":1338,"mtime":1608799213536,"results":"11","hashOfConfig":"10"},{"size":659,"mtime":1608922666711,"results":"12","hashOfConfig":"10"},{"size":1477,"mtime":1608477893626,"results":"13","hashOfConfig":"10"},{"size":1335,"mtime":1608477735874,"results":"14","hashOfConfig":"10"},{"size":1776,"mtime":1608477634835,"results":"15","hashOfConfig":"10"},{"size":2339,"mtime":1608663499020,"results":"16","hashOfConfig":"10"},{"size":1207,"mtime":1608923587505,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"gjbb5s",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Workflow\\code\\proj\\#\\portfolio projects\\movie lib\\_final-ver\\movie_library\\src\\index.js",[],["37","38"],"D:\\Workflow\\code\\proj\\#\\portfolio projects\\movie lib\\_final-ver\\movie_library\\src\\App.js",["39","40"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport DarkModeToogle from './components/DarkMode/DarkModeToogle/darkModeToogle';\r\nimport SerachBar from './components/SearchBar/serachBar';\r\n\r\n// const lightTheme = {\r\n//   '--color-primary': '#8352fd',\r\n//   '--color-light': '#ffffff',\r\n//   '--color-dark': '#070707',\r\n//   '--color-text': '#575757',\r\n//   '--color-textHighlight': '#333333',\r\n//   '--background': '#f2f6ff',\r\n// };\r\n\r\n// const darkTheme = {\r\n//   '--color-primary': '#3913b8',\r\n//   '--color-light': '#1f1f1f',\r\n//   '--color-dark': '#f2f2f2',\r\n//   '--color-text': '#dadada',\r\n//   '--color-textHighlight': '#f0f0f0',\r\n//   '--background': '#121212',\r\n// };\r\n\r\nconst App = () => {\r\n  // const [darkMode, setDarkMode] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //   const currentTheme = darkMode ? darkTheme : lightTheme;\r\n  //   Object.entries(currentTheme).forEach((entry) => {\r\n  //     document.documentElement.style.setProperty(entry[0], entry[1]);\r\n  //   });\r\n  //   localStorage.setItem('darkmode', darkMode);\r\n  // }, [darkMode]);\r\n\r\n  // useEffect(() => {\r\n  //   if (localStorage.getItem('darkmode')) {\r\n  //     setDarkMode(true);\r\n  //   }\r\n  // }, []);\r\n\r\n  return (\r\n    <main className=\"Wrapper\">\r\n      <DarkModeToogle />\r\n      <SerachBar />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","D:\\Workflow\\code\\proj\\#\\portfolio projects\\movie lib\\_final-ver\\movie_library\\src\\components\\DarkMode\\DarkModeToogle\\darkModeToogle.js",[],"D:\\Workflow\\code\\proj\\#\\portfolio projects\\movie lib\\_final-ver\\movie_library\\src\\components\\DarkMode\\useMedia.js",["41","42"],"import React, { useEffect, useState } from 'react';\r\n\r\n// Code from https://usehooks.com/useMedia\r\n\r\n// Alternate hook that accepts a single query\r\nexport default function useMedia(queries, values, defaultValue) {\r\n  // State and setter for matched value\r\n  const [value, setValue] = useState(defaultValue);\r\n\r\n  // Array containing a media query list for each query\r\n  const mediaQueryLists = queries.map((q) => window.matchMedia(q));\r\n\r\n  // State update function\r\n  const getValue = () => {\r\n    // Get index of first media query that matches\r\n    const index = mediaQueryLists.findIndex((mql) => mql.matches);\r\n    // Return related value or defaultValue if none\r\n    return typeof values[index] !== 'undefined' ? values[index] : defaultValue;\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      // Set the initial value\r\n      setValue(getValue);\r\n\r\n      // Event listener callback\r\n      // By defining getValue outside of useEffect we ensure that it has ...\r\n      // ... current values of hook args (as this hook only run on mount/dismount).\r\n      const handler = () => setValue(getValue);\r\n\r\n      // Set a listener for each media query with above handler as callback.\r\n      mediaQueryLists.forEach((mql) => mql.addListener(handler));\r\n\r\n      // Remove listeners on cleanup\r\n      return () =>\r\n        mediaQueryLists.forEach((mql) => mql.removeListener(handler));\r\n    },\r\n    [] // Empty array ensures effect is only run on mount and unmount\r\n  );\r\n\r\n  return value;\r\n}\r\n","D:\\Workflow\\code\\proj\\#\\portfolio projects\\movie lib\\_final-ver\\movie_library\\src\\components\\DarkMode\\useLocalStorage.js",[],"D:\\Workflow\\code\\proj\\#\\portfolio projects\\movie lib\\_final-ver\\movie_library\\src\\components\\DarkMode\\useDarkMode.js",[],"D:\\Workflow\\code\\proj\\#\\portfolio projects\\movie lib\\_final-ver\\movie_library\\src\\components\\SearchBar\\serachBar.js",[],"D:\\Workflow\\code\\proj\\#\\portfolio projects\\movie lib\\_final-ver\\movie_library\\src\\components\\MovieCard\\movieCard.js",["43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":17,"nodeType":"50","messageId":"51","endLine":1,"endColumn":25},{"ruleId":"48","severity":1,"message":"52","line":1,"column":27,"nodeType":"50","messageId":"51","endLine":1,"endColumn":36},{"ruleId":"48","severity":1,"message":"53","line":1,"column":8,"nodeType":"50","messageId":"51","endLine":1,"endColumn":13},{"ruleId":"54","severity":1,"message":"55","line":38,"column":5,"nodeType":"56","endLine":38,"endColumn":7,"suggestions":"57"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":17,"nodeType":"50","messageId":"51","endLine":1,"endColumn":25},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getValue' and 'mediaQueryLists'. Either include them or remove the dependency array.","ArrayExpression",["60"],"no-global-assign","no-unsafe-negation",{"desc":"61","fix":"62"},"Update the dependencies array to be: [getValue, mediaQueryLists]",{"range":"63","text":"64"},[1382,1384],"[getValue, mediaQueryLists]"]